# -*- coding: utf-8 -*-
"""CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19e6ZiO1IkXXtVx3KPamNsvEGr2wqNQKV
"""

#get acess google drive data into google colab

from google.colab import drive
drive.mount('/content/drive')

#We unzipping the content

!pip install patool
import patoolib
patoolib.extract_archive("/content/drive/My Drive/dataset.rar", outdir="/content/")
print('Finish')

#We install keras 

!pip install -q keras

# Importing the Keras libraries and packages
from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

# Initialising the CNN

CNN_Classifier=Sequential();

# Step 1 - Convolution
CNN_Classifier.add(Conv2D(32,(3,3),input_shape=(64,64,3),activation='relu'))

# Step 2 - Pooling
CNN_Classifier.add(MaxPooling2D(pool_size=(2,2)))

# Step 1 - Convolution
CNN_Classifier.add(Conv2D(16,(3,3),activation='relu'))

# Step 2 - Pooling
CNN_Classifier.add(MaxPooling2D(pool_size=(2,2)))


# Step 3 - Flattening
CNN_Classifier.add(Flatten())


# Step 4 - Full connection
CNN_Classifier.add(Dense(units=128, activation='relu'))
CNN_Classifier.add(Dense(units=1, activation='sigmoid'))

# Compiling the CNN (Taken From Keras image data processing)
CNN_Classifier.compile(optimizer ='adam',loss='binary_crossentropy',metrics=['accuracy'])

from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)

training_set = train_datagen.flow_from_directory('/content/drive/My Drive/dataset/training_set',
                                                 target_size = (64, 64),
                                                 batch_size = 32,
                                                 class_mode = 'binary')

test_set = test_datagen.flow_from_directory('/content/drive/My Drive/dataset/test_set',
                                            target_size = (64, 64),
                                            batch_size = 32,
                                            class_mode = 'binary')

CNN_Classifier.fit_generator(training_set,
                         steps_per_epoch = 7000,
                         epochs = 1,
                         validation_data = test_set,
                         validation_steps = 2000)

#Finally We can test dataset here 
import numpy as np
from keras.preprocessing import image
test_image = image.load_img ('/content/drive/My Drive/dataset/single_prediction/cat_or_dog_2.jpg', target_size=(64, 64))
test_image = image.img_to_array(test_image)
test_image = np.expand_dims(test_image, axis=0)
result = CNN_Classifier.predict(test_image)
training_set.class_indices
if result[0][0] == 1:
  prediction = 'dog'
else:
  prediction = 'cat'
print(prediction)

